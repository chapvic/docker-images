
version: 3

dotenv: [ '.env' ]

tasks:

    build:
        desc: 'Build Element Web'
        silent: true
        vars:
            ELEMENT_VERSION:
                sh: git ls-remote --refs {{.ELEMENT_SOURCE}} 'refs/tags/v*' | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -v 'rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo -e '\e[44;1m[ Building Element Web ]\e[0;0m'
            - sed -i '/ELEMENT_VERSION=/d' .env
            - echo "ELEMENT_VERSION={{.ELEMENT_VERSION}}" >> .env
            - docker compose build --push
            - sed -i '/ELEMENT_VERSION=/d' .env
            - echo "[ Done ]"

    sync:
        desc: "Synchronize with DockerHub"
        silent: true
        vars:
            ELEMENT_VERSION:
                sh: git ls-remote --refs {{.ELEMENT_SOURCE}} 'refs/tags/v*' | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -v 'rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo -e '\e[44;1m[ Synchronize with DockerHub ]\e[0;0m'
            - echo "Sync {{.REGISTRY}}/{{.NAME}}:{{.ELEMENT_VERSION}} => {{.SYNC_TARGET}}/{{.NAME}}:{{.ELEMENT_VERSION}}"
            - skopeo copy docker://{{.REGISTRY}}/{{.NAME}}:{{.ELEMENT_VERSION}} docker://{{.SYNC_TARGET}}/{{.NAME}}:{{.ELEMENT_VERSION}}
            - echo "Sync {{.REGISTRY}}/{{.NAME}}:latest => {{.SYNC_TARGET}}/{{.NAME}}:latest"
            - skopeo copy docker://{{.REGISTRY}}/{{.NAME}}:latest docker://{{.SYNC_TARGET}}/{{.NAME}}:latest
            - echo "[ Done ]"

    checkout:
        silent: true
        vars:
            ELEMENT_VERSION:
                sh: git ls-remote --refs {{.ELEMENT_SOURCE}} 'refs/tags/v*' | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -v 'rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo {{.ELEMENT_VERSION}}

    all:
        desc: 'Build and Synchronize'
        silent: true
        cmds:
            - task: build
            - task: sync

    default:
        silent: true
        cmds:
            - task -l
