
version: 3

dotenv: [ '.env' ]

tasks:

    build-plugin:
        silent: true
        internal: true
        cmds:
            - echo "- {{.TITLE}}"
            - sed -i '/VMWARE_PLUGIN_VERSION=/d' .env
            - echo "VMWARE_PLUGIN_VERSION={{.VERSION}}" >> .env
            - docker compose build --push
            - sed -i '/VMWARE_PLUGIN_VERSION=/d' .env
            - echo "[ Done ]"

    build:
        desc: 'Build Ansible VMware'
        silent: true
        cmds:
            - echo -e '\e[44;1m[ Ansible VMware ]\e[0;0m'
            - for: { var: VMWARE_PLUGIN_VERSION_LIST }
              task: build-plugin
              vars:
                TITLE: 'Ansible VMware {{.ITEM}}'
                VERSION: '{{.ITEM}}'

    sync-plugin:
        silent: true
        internal: true
        cmds:
            - echo "Sync {{.REGISTRY}}/{{.NAME}}:{{.VERSION}} => {{.SYNC_TARGET}}/{{.NAME}}:{{.VERSION}}"
            - skopeo copy docker://{{.REGISTRY}}/{{.NAME}}:{{.VERSION}} docker://{{.SYNC_TARGET}}/{{.NAME}}:{{.VERSION}}
            - echo "[ Done ]"

    sync:
        desc: 'Synchronize with DockerHub'
        silent: true
        cmds:
            - echo -e '\e[44;1m[ Synchronize with DockerHub ]\e[0;0m'
            - for: { var: VMWARE_PLUGIN_VERSION_LIST }
              task: sync-plugin
              vars:
                VERSION: '{{.ITEM}}'

    checkout-plugin:
        silent: true
        internal: true
        cmds:
            - echo -n "{{.VERSION}} "

    checkout:
        silent: true
        cmds:
            - for: { var: VMWARE_PLUGIN_VERSION_LIST }
              task: checkout-plugin
              vars:
                VERSION: '{{.ITEM}}'

    all:
        desc: 'Build and Synchronize'
        silent: true
        cmds:
            - task: build
            - task: sync

    default:
        silent: true
        cmds:
            - task -l
