
version: 3

dotenv: [ '.env' ]

tasks:

    build:
        desc: 'Build Caddy Web Server'
        silent: true
        vars:
            CADDY_VERSION:
                sh: git ls-remote --tags {{.CADDY_SOURCE}} | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -Ev 'beta|rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo -e '\e[44;1m[ Building Caddy Web Server ]\e[0;0m'
            - sed -i '/CADDY_VERSION=/d' .env
            - echo "CADDY_VERSION={{.CADDY_VERSION}}" >> .env
            - docker compose build --push
            - sed -i '/CADDY_VERSION=/d' .env
            - echo "[ Done ]"

    sync:
        desc: "Synchronize with DockerHub"
        silent: true
        vars:
            CADDY_VERSION:
                sh: git ls-remote --tags {{.CADDY_SOURCE}} | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -Ev 'beta|rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo -e '\e[44;1m[ Synchronize with DockerHub ]\e[0;0m'
            - echo "Sync {{.REGISTRY}}/{{.NAME}}:{{.CADDY_VERSION}} => {{.SYNC_TARGET}}/{{.NAME}}:{{.CADDY_VERSION}}"
            - skopeo copy docker://{{.REGISTRY}}/{{.NAME}}:{{.CADDY_VERSION}} docker://{{.SYNC_TARGET}}/{{.NAME}}:{{.CADDY_VERSION}}
            - echo "Sync {{.REGISTRY}}/{{.NAME}}:latest => {{.SYNC_TARGET}}/{{.NAME}}:latest"
            - skopeo copy docker://{{.REGISTRY}}/{{.NAME}}:latest docker://{{.SYNC_TARGET}}/{{.NAME}}:latest
            - echo "[ Done ]"

    checkout:
        silent: true
        vars:
            CADDY_VERSION:
                sh: git ls-remote --tags {{.CADDY_SOURCE}} | sed -e '/.*^{}/d' -e 's,.*\/,,' | grep -Ev 'beta|rc' | sort --version-sort | tail -n1 | sed -r 's/v(.*)/\1/'
        cmds:
            - echo {{.CADDY_VERSION}}

    all:
        desc: 'Build and Synchronize'
        silent: true
        cmds:
            - task: build
            - task: sync

    default:
        silent: true
        cmds:
            - task -l
